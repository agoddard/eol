- editable = @collection.editable_by?(current_user)
= content_for :additional_page_actions do
  - if editable
    %li= link_to I18n.t(:edit_collection), edit_collection_path(@collection), :class => 'button'
-# TODO ...
- if @collection_items.blank?
  #sidebar
    .collection_contributors
      = render :partial => 'collections/managed_by', :locals => { :collection => @collection }
    - if @collection.collection_endorsements.count > 0
      .collection_contributors
        = render :partial => 'collections/endorsed_by', :locals => { :collection => @collection }
  #collections.main_container
    .heading
      %p#empty= I18n.t(:collection_is_empty)
- else
  - form_for(@collection, { :html => {:method => :get}, :url => {:action => :show} }) do |f|
    = hidden_field_tag(:filter, @filter) if @filter
    #tabs_sidebar
      = render :partial => 'collections/filter_by_item_type'
    #sidebar
      - if logged_in?
        .filters
          %h4= I18n.t(:collect_items)
          %fieldset.actions
            = select_tag :scope, options_for_select(@collection_item_scopes.map {|scope| [I18n.t(scope), scope]})
            - if editable
              = submit_tag I18n.t(:move)
              = submit_tag I18n.t(:copy)
              = submit_tag I18n.t(:remove)
            - else
              = submit_tag I18n.t(:collect)
      .collection_contributors
        = render :partial => 'collections/managed_by', :locals => { :collection => @collection }
      - if @collection.collection_endorsements.count > 0
        .collection_contributors
          = render :partial => 'collections/endorsed_by', :locals => { :collection => @collection }
    #collections.main_container
      - unless @collection_items.blank?
        .heading
          %fieldset
            = label_tag :sort_by, I18n.t(:sort_by_label)
            = select_tag :sort_by, options_for_select(@sort_options.map {|so| [so.name, so.id]}, @sort_by.id)
          %fieldset.actions
            = submit_tag I18n.t(:sort_by_button), :name => :commit_sort
        = will_paginate @collection_results, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next), :inner_window => 2, :outer_window => 2
        %ul.object_list
          - @collection_items.each do |item|
            - item_type = en_type(item)
            %li{:class => "#{item_type}" + (editable ? ' editable' : '')}
              = render :partial => 'collection_items/show', :locals => { :collection_item => item, :editable => editable, :item_type => item_type }
        = will_paginate @collection_results, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next), :inner_window => 2, :outer_window => 2
