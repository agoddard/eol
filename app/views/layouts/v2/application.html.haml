!!! XML
!!! 5
-# TODO - We need to apply I18n to all of the :title attributes here.
%html{ "xml:lang" => I18n.locale, :lang => I18n.locale, :xmlns => "http://www.w3.org/1999/xhtml" }
  %head
    %title
      - # Accessibility tip: Page titles should be unique and meaningful to the page and include the site name.
      - # Home page title can just be the site name.
      - head_title =  I18n.t(:encyclopedia_of_life)
      - if @head_title ||= @page_title
        - head_title =  "EOL: #{@head_title} - #{head_title}"
      - elsif (@taxon_concept && !@taxon_concept.title(@session_hierarchy).blank?)
        - head_title = "EOL: #{@taxon_concept.title(@session_hierarchy)} - #{head_title}"
      &= strip_tags(head_title)

    %meta{ :charset => "utf-8" }
    - # HTML4 charset declaration, might go when browsers catch up with html5
    %meta{ :content => "text/html; charset=utf-8", "http-equiv" => "Content-type" }
    %meta{ :name => "verify-v1", :content => "mJIytYT6a+K1y+bCmD1wr1ge+4Q63O0YfTHCYWwkzaY=" }
    - # Prevents generation of links to "smart tags"
    %meta{ :name => "MSSmartTagsPreventParsing", :content => "true" }
    - @meta_description ||= "The Encyclopedia of Life is an unprecedented effort to gather and share scientific knowledge about all living things in a single online resource, giving each of us a breathtaking view of our amazing world."
    %meta{ :name => "description", :content => h(strip_tags("@meta_description")) }

    - if @meta_keywords
      %meta{ :name => "keywords", :content => meta_keywords(h(@meta_keywords)) }

    - if @no_cache
      %meta{ :content => "NO-CACHE", "http-equiv" => "CACHE-CONTROL" }
      %meta{ :content => "NO-CACHE", "http-equiv" => "PRAGMA" }

    %link{ :href => "/favicon.ico", :rel => "shortcut icon", :type => "image/x-icon" }
    %link{ :href => "/opensearchdescription.xml", :title => I18n.t("encyclopedia_of_life"), :rel => "search", :type => "application/opensearchdescription+xml" }

    - if @home_page
      = eol_lang_main_stylesheet 'home', :media => "all"
    - else
      = eol_lang_main_stylesheet 'application', :media => "all"
    = eol_lang_main_stylesheet 'accessibility', :media => "all"

    = javascript_include_tag "jquery-1.6.1.min", "rails", "application", "jquery.cycle.all.min"

    = yield :head

  %body{:class => @home_page ? 'home' : nil}
    %ul#controls.assistive
      %li= link_to I18n.t(:skip_to_content), '#main'
    #header
      .section
        %h1= link_to I18n.t(:encyclopedia_of_life), root_url, { :title => I18n.t(:home_page_link_advisory_information) }
        = render :partial => '/layouts/v2/global_navigation'
        .actions
          .language
            %p{ :title => I18n.t(:selected_language_advisory_information) }
              -# FIXME: Fix this so it gets currently selected language easily from controller?
              -# FIXME: Where should this link go? To separate 'select language' page?
              - link_to "#" do
                %span Language: EN
            %ul
              - Language.find_active.each do |language|
                %li
                  = link_to I18n.t(:language_menu_item, :language_label => language.source_form, :language_abbr => language.display_code),
                    set_language_url(:language => language.iso_639_1),
                    { :title => I18n.t(:switch_language_advisory_information, :language_label => language.source_form) }
              %li
                = link_to I18n.t(:google_translate), { :controller => "/content", :action => "translate" },
                  { :title => I18n.t(:google_translate_advisory_information) }
        - if @home_page
          %h2= I18n.t(:global_access_tagline)
        = render :partial => "/layouts/v2/search"
        - if logged_in?
          = render :partial => 'sessions/session_summary'
        - elsif $ALLOW_USER_LOGINS && !agent_logged_in?
          - if @home_page
            = render :partial => 'shared/join_eol', :locals => {:join_style => 'button'}
          - else
            .session
              = render :partial => 'shared/join_eol'
        - elsif $ALLOW_USER_LOGINS == false && @home_page.nil?
          .session
            %p= I18n.t(:user_system_down)

      - if @home_page
        %h3.assistive= I18n.t(:explore)
        .thumbnails
          %ul
            - @explore_taxa[0..4].each do |random_image|
              %li= link_to image_tag(random_image.data_object.thumb_or_object('130_130'),
                :alt => random_image.taxon_concept.entry.name.canonical_form.string), "/pages/#{random_image.taxon_concept_id}"
            - if random_image = @explore_taxa[5]
              %li.last= link_to image_tag(random_image.data_object.thumb_or_object('130_130'),
                :alt => random_image.taxon_concept.entry.name.canonical_form.string), "/pages/#{random_image.taxon_concept_id}"
          - # TODO: Remove these empty elements from markup - add them with JS if required
          .term
            .site_column
              %p


    #central
      .section{ :role => "main" }
        = yield :main

    #footer{ :role => "contentinfo" }
      .section
        %h2.assistive= I18n.t(:site_information)
        .copyright
          %h6= link_to I18n.t(:encyclopedia_of_life), root_url
          %p{ :title => I18n.t(:application_version_advisory_information) }
            - if ENV["APP_VERSION"].blank?
              = I18n.t(:development_version_name)
            - else
              = ENV["APP_VERSION"]
        = render :partial => '/layouts/v2/global_navigation', :locals => { :position => :footer }
        %ul.social_media
          - #TODO: Add functional social media links.
          %li= link_to I18n.t(:twitter), "/placeholder", :class => "twitter"
          %li= link_to I18n.t(:rss_abbr_html), "/placeholder", :class => "rss"

    - if $ENABLE_ANALYTICS || true
      :javascript
        var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
        document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
      :javascript
        try { var pageTracker = _gat._getTracker("#{$GOOGLE_ANALYTICS_ID}"); pageTracker._trackPageview(); } catch(err) {}
