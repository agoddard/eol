.curation-section
  .credit-caption
    = "Rating"[]
  .image-rating.action-value
    -# TODO - This has a problem... it's not specific to the data object in question, so Ajax is not intelligent about updating the right values when it's changed.  It ALSO doesn't seem to work in this context: the images are not clickable... and I can't figure out why.  Help!
    = render :partial => '/data_objects/star_rating_hash', :locals => {:data_object => data_object, :show_controls => true}
.clearbreak
  %br
- is_ignored = defined?(ignored) && ignored
- is_ignored_class = is_ignored ? "is_ignored_true" : "is_ignored_false"
.curation-section{ :class => is_ignored_class }
  .credit-caption
    = is_ignored ? "Ignored"[] : "Active"[] 
  .action-value{ :id => "ignore-#{data_object['id']}" }
    - if is_ignored
      %a= "Move to active list"[]
    - else
      %a= "Move to ignored list"[]
    %span.info_msg
.clearbreak
  %br
.curation-section
  .credit-caption
    = "Vetted"[]
  .action-value
    %span{:id => "trust-label-#{data_object['id']}"}
      - data_object['vetted_label'] = 'Unreviewed' if data_object['vetted_label'] == 'Unknown'
      = data_object['vetted_label']
    %br/
    = link_to_remote("Set to Unreviewed"[], :url => {:action => :unreviewed, :data_object_id => data_object['id'], :div_id => "trust-label-#{data_object['id']}"}, :html_options => {:id => 'unreviewed'})
    %br/
    = link_to_remote("Set to Trusted"[], :url => {:action => :trust, :data_object_id => data_object['id'], :div_id => "trust-label-#{data_object['id']}"}, :html_options => {:id => 'trust'})
    %br/
    = link_to_remote("Set to Untrusted"[], :url => {:action => :untrust, :data_object_id => data_object['id'], :div_id => "trust-label-#{data_object['id']}"}, :html_options => {:id => 'untrust'})
    - dato = DataObject.new(:guid => data_object['guid'])
    - dato.id = data_object['id']
    - div_style = 'display:none;'
    = render :partial => 'data_objects/untrust_reasons', :locals => { :data_object => dato, :div_style => div_style }
.curation-section
  .credit-caption
    = "Visibility"[]
  .action-value
    %span{:id => "visibility-label-#{data_object['id']}"}
      = data_object['visibility_label']
    %br/
    = link_to_remote("Show to all users"[], :url => {:action => :show, :data_object_id => data_object['id'], :div_id => "visibility-label-#{data_object['id']}"})
    %br/
    = link_to_remote("Hide for all except curators"[], :url => {:action => :hide, :data_object_id => data_object['id'], :div_id => "visibility-label-#{data_object['id']}"})
    %br/
    = link_to_remote("Permanently Remove"[], :url => {:action => :remove, :data_object_id => data_object['id'], :div_id => "visibility-label-#{data_object['id']}"})
.curation-section
  .credit-caption
    = "Comment"[]
  .action-value
    This comment will be publicly visible.
    %form{:action => :comment, :id => "comment_#{data_object['id']}", :class => "comment"}
      %input{:type => "hidden", :value => data_object['id'], :name => "data_object_id"}
      %input{:type => "hidden", :value => params['hierarchy_entry_id'], :name => "hierarchy_entry_id"}
      %textarea{ :name => 'comment', :rows => comment_height, :class => 'comment-box' }
      #save-comment
        = submit_tag "Save"
.text_buttons
  - comments = data_object['comments'].select { |c| c['visible_at'] && DateTime.parse(c['visible_at']) <= DateTime.now }
  - if comments.blank?
    - comment_tooltip = "No comments yet. "
  - else
    - curator_comments = data_object['comments'].select{ |c| c['user_id'].to_i == current_user.id && c['visible_at'] && DateTime.parse(c['visible_at']) <= DateTime.now }
    - tooltip = "#{comments.size} comment#{comments.size == 1 ? '' : 's'}. "
    - if curator_comments.blank? 
      - comment_tooltip = tooltip
    - else
      - comment_tooltip =  tooltip +  "#{curator_comments.size} #{curator_comments.size == 1 ? 'is' : 'are'} yours. "
  = render :partial => '/comments/comment_icon', :locals => { :data_object_id => data_object['id'], :title => comment_tooltip + "Add a comment.", :comments_count => comments.size, :alt => "Comment on this #{data_object['data_type_label']}", :comment_class => 'popup-link', :rel => '' }
.text-slidebox-border{:id => "text-comments-wrapper-#{data_object['id']}", :style => "display:none;"}
  .text-slidebox-container.text-comment-div{:id => "text-comments-#{data_object['id']}"}
    -# TODO - we re-use this indicator a lot.  Put it in a CSS class.
    %p
      = image_tag 'indicator_arrows_black.gif'
      = "Please wait..."[]
